<?php


namespace app\author\controller;


use app\model\Book;
use app\model\Chapter;
use think\db\exception\ModelNotFoundException;
use think\facade\View;

class Chapters extends Base
{
    protected $chapterService;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->chapterService = app('chapterService');
    }

    public function list() {
        $book_id = input('book_id');
        View::assign('book_id', $book_id);
        return view();
    }

    public function getlist() {
        $book_id = input('book_id');
        $page = intval(input('page'));
        $limit = intval(input('limit'));
        $data = Chapter::where('book_id','=',$book_id)->order('id', 'desc');
        $count = $data->count();
        $chapters = $data->limit(($page - 1) * $limit, $limit)->select();
        return json([
            'code' => 0,
            'msg' => '',
            'count' => $count,
            'data' => $chapters
        ]);
    }

    public function create() {
        if (request()->isPost()) {
            $data = request()->param();
            $result = Chapter::create($data);
            if ($result){
                $param = [
                    "id" => $data["book_id"],
                    "last_time" => time()
                ];
                $result2 = Book::update($param);
                if ($result2) {
                    return json(['err' =>0,'msg'=>'添加成功']);
                } else {
                    return json(['err' =>1,'msg'=>'添加失败']);
                }
            }else{
                return json(['err' =>1,'msg'=>'添加失败']);
            }
        }
        $book_id = input('book_id');
        $lastChapterOrder = 0;
        $lastChapter = $this->chapterService->getLastChapter($book_id);
        if ($lastChapter){
            $lastChapterOrder = $lastChapter->chapter_order;
        }
        View::assign([
            'book_id' => $book_id,
            'order' => $lastChapterOrder + 1,
        ]);
        return view();
    }
}